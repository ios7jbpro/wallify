// Generated by view binder compiler. Do not edit!
package com.ios7.wallify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ios7.wallify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WalldownloadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView Game;

  @NonNull
  public final ImageView ImageView4;

  @NonNull
  public final ImageView ImageView5;

  @NonNull
  public final ImageView ImageView6;

  @NonNull
  public final LinearLayout LinearLayout1;

  @NonNull
  public final LinearLayout LinearLayout4;

  @NonNull
  public final LinearLayout LinearLayout5;

  @NonNull
  public final ImageView Massage;

  @NonNull
  public final ImageView More;

  @NonNull
  public final ImageView Phone;

  @NonNull
  public final LinearLayout SearchBg;

  @NonNull
  public final ImageView Translator;

  @NonNull
  public final TextView button1;

  @NonNull
  public final TextView button2;

  @NonNull
  public final TextView button3;

  @NonNull
  public final TextView button4;

  @NonNull
  public final LinearLayout color1;

  @NonNull
  public final LinearLayout color2;

  @NonNull
  public final LinearLayout color3;

  @NonNull
  public final LinearLayout color4;

  @NonNull
  public final LinearLayout color5;

  @NonNull
  public final LinearLayout color6;

  @NonNull
  public final LinearLayout colorpreviews;

  @NonNull
  public final LinearLayout colorpreviewsloading;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final ImageView imageViewPfp;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final FrameLayout linear10;

  @NonNull
  public final LinearLayout linear11;

  @NonNull
  public final LinearLayout linear14;

  @NonNull
  public final LinearLayout linear15;

  @NonNull
  public final LinearLayout linear16;

  @NonNull
  public final LinearLayout linear17;

  @NonNull
  public final LinearLayout linear18;

  @NonNull
  public final LinearLayout linear19;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear20;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final FrameLayout linear8;

  @NonNull
  public final LinearLayout linear9;

  @NonNull
  public final LinearLayout linearloadhires;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linearpfpprevbg;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linearpfppreview;

  @NonNull
  public final LinearLayout linearpreviewcard;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout pfpClipper;

  @NonNull
  public final LinearLayout previewStatusBar;

  @NonNull
  public final ProgressBar progressBar6;

  @NonNull
  public final ProgressBar progressBarLoading;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView14;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView20;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textViewCrop;

  @NonNull
  public final TextView textViewLoading;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView textview4;

  @NonNull
  public final TextView time2;

  private WalldownloadBinding(@NonNull LinearLayout rootView, @NonNull ImageView Game,
      @NonNull ImageView ImageView4, @NonNull ImageView ImageView5, @NonNull ImageView ImageView6,
      @NonNull LinearLayout LinearLayout1, @NonNull LinearLayout LinearLayout4,
      @NonNull LinearLayout LinearLayout5, @NonNull ImageView Massage, @NonNull ImageView More,
      @NonNull ImageView Phone, @NonNull LinearLayout SearchBg, @NonNull ImageView Translator,
      @NonNull TextView button1, @NonNull TextView button2, @NonNull TextView button3,
      @NonNull TextView button4, @NonNull LinearLayout color1, @NonNull LinearLayout color2,
      @NonNull LinearLayout color3, @NonNull LinearLayout color4, @NonNull LinearLayout color5,
      @NonNull LinearLayout color6, @NonNull LinearLayout colorpreviews,
      @NonNull LinearLayout colorpreviewsloading, @Nullable ImageView imageViewPfp,
      @NonNull ImageView imageview1, @NonNull ImageView imageview3, @NonNull LinearLayout linear1,
      @NonNull FrameLayout linear10, @NonNull LinearLayout linear11, @NonNull LinearLayout linear14,
      @NonNull LinearLayout linear15, @NonNull LinearLayout linear16,
      @NonNull LinearLayout linear17, @NonNull LinearLayout linear18,
      @NonNull LinearLayout linear19, @NonNull LinearLayout linear2, @NonNull LinearLayout linear20,
      @NonNull LinearLayout linear4, @NonNull LinearLayout linear5, @NonNull LinearLayout linear7,
      @NonNull FrameLayout linear8, @NonNull LinearLayout linear9,
      @NonNull LinearLayout linearloadhires, @Nullable LinearLayout linearpfpprevbg,
      @Nullable LinearLayout linearpfppreview, @NonNull LinearLayout linearpreviewcard,
      @Nullable LinearLayout pfpClipper, @NonNull LinearLayout previewStatusBar,
      @NonNull ProgressBar progressBar6, @NonNull ProgressBar progressBarLoading,
      @Nullable TextView textView14, @NonNull TextView textView18, @NonNull TextView textView2,
      @Nullable TextView textView20, @NonNull TextView textView3, @NonNull TextView textView5,
      @NonNull TextView textViewCrop, @NonNull TextView textViewLoading,
      @NonNull TextView textview1, @NonNull TextView textview2, @NonNull TextView textview3,
      @NonNull TextView textview4, @NonNull TextView time2) {
    this.rootView = rootView;
    this.Game = Game;
    this.ImageView4 = ImageView4;
    this.ImageView5 = ImageView5;
    this.ImageView6 = ImageView6;
    this.LinearLayout1 = LinearLayout1;
    this.LinearLayout4 = LinearLayout4;
    this.LinearLayout5 = LinearLayout5;
    this.Massage = Massage;
    this.More = More;
    this.Phone = Phone;
    this.SearchBg = SearchBg;
    this.Translator = Translator;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.color1 = color1;
    this.color2 = color2;
    this.color3 = color3;
    this.color4 = color4;
    this.color5 = color5;
    this.color6 = color6;
    this.colorpreviews = colorpreviews;
    this.colorpreviewsloading = colorpreviewsloading;
    this.imageViewPfp = imageViewPfp;
    this.imageview1 = imageview1;
    this.imageview3 = imageview3;
    this.linear1 = linear1;
    this.linear10 = linear10;
    this.linear11 = linear11;
    this.linear14 = linear14;
    this.linear15 = linear15;
    this.linear16 = linear16;
    this.linear17 = linear17;
    this.linear18 = linear18;
    this.linear19 = linear19;
    this.linear2 = linear2;
    this.linear20 = linear20;
    this.linear4 = linear4;
    this.linear5 = linear5;
    this.linear7 = linear7;
    this.linear8 = linear8;
    this.linear9 = linear9;
    this.linearloadhires = linearloadhires;
    this.linearpfpprevbg = linearpfpprevbg;
    this.linearpfppreview = linearpfppreview;
    this.linearpreviewcard = linearpreviewcard;
    this.pfpClipper = pfpClipper;
    this.previewStatusBar = previewStatusBar;
    this.progressBar6 = progressBar6;
    this.progressBarLoading = progressBarLoading;
    this.textView14 = textView14;
    this.textView18 = textView18;
    this.textView2 = textView2;
    this.textView20 = textView20;
    this.textView3 = textView3;
    this.textView5 = textView5;
    this.textViewCrop = textViewCrop;
    this.textViewLoading = textViewLoading;
    this.textview1 = textview1;
    this.textview2 = textview2;
    this.textview3 = textview3;
    this.textview4 = textview4;
    this.time2 = time2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WalldownloadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WalldownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.walldownload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WalldownloadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Game;
      ImageView Game = ViewBindings.findChildViewById(rootView, id);
      if (Game == null) {
        break missingId;
      }

      id = R.id.ImageView4;
      ImageView ImageView4 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView4 == null) {
        break missingId;
      }

      id = R.id.ImageView5;
      ImageView ImageView5 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView5 == null) {
        break missingId;
      }

      id = R.id.ImageView6;
      ImageView ImageView6 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView6 == null) {
        break missingId;
      }

      id = R.id.LinearLayout1;
      LinearLayout LinearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout1 == null) {
        break missingId;
      }

      id = R.id.LinearLayout4;
      LinearLayout LinearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout4 == null) {
        break missingId;
      }

      id = R.id.LinearLayout5;
      LinearLayout LinearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout5 == null) {
        break missingId;
      }

      id = R.id.Massage;
      ImageView Massage = ViewBindings.findChildViewById(rootView, id);
      if (Massage == null) {
        break missingId;
      }

      id = R.id.More;
      ImageView More = ViewBindings.findChildViewById(rootView, id);
      if (More == null) {
        break missingId;
      }

      id = R.id.Phone;
      ImageView Phone = ViewBindings.findChildViewById(rootView, id);
      if (Phone == null) {
        break missingId;
      }

      id = R.id.Search_bg;
      LinearLayout SearchBg = ViewBindings.findChildViewById(rootView, id);
      if (SearchBg == null) {
        break missingId;
      }

      id = R.id.Translator;
      ImageView Translator = ViewBindings.findChildViewById(rootView, id);
      if (Translator == null) {
        break missingId;
      }

      id = R.id.button1;
      TextView button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.button2;
      TextView button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      TextView button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button4;
      TextView button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.color1;
      LinearLayout color1 = ViewBindings.findChildViewById(rootView, id);
      if (color1 == null) {
        break missingId;
      }

      id = R.id.color2;
      LinearLayout color2 = ViewBindings.findChildViewById(rootView, id);
      if (color2 == null) {
        break missingId;
      }

      id = R.id.color3;
      LinearLayout color3 = ViewBindings.findChildViewById(rootView, id);
      if (color3 == null) {
        break missingId;
      }

      id = R.id.color4;
      LinearLayout color4 = ViewBindings.findChildViewById(rootView, id);
      if (color4 == null) {
        break missingId;
      }

      id = R.id.color5;
      LinearLayout color5 = ViewBindings.findChildViewById(rootView, id);
      if (color5 == null) {
        break missingId;
      }

      id = R.id.color6;
      LinearLayout color6 = ViewBindings.findChildViewById(rootView, id);
      if (color6 == null) {
        break missingId;
      }

      id = R.id.colorpreviews;
      LinearLayout colorpreviews = ViewBindings.findChildViewById(rootView, id);
      if (colorpreviews == null) {
        break missingId;
      }

      id = R.id.colorpreviewsloading;
      LinearLayout colorpreviewsloading = ViewBindings.findChildViewById(rootView, id);
      if (colorpreviewsloading == null) {
        break missingId;
      }

      id = R.id.imageViewPfp;
      ImageView imageViewPfp = ViewBindings.findChildViewById(rootView, id);

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = ViewBindings.findChildViewById(rootView, id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear10;
      FrameLayout linear10 = ViewBindings.findChildViewById(rootView, id);
      if (linear10 == null) {
        break missingId;
      }

      id = R.id.linear11;
      LinearLayout linear11 = ViewBindings.findChildViewById(rootView, id);
      if (linear11 == null) {
        break missingId;
      }

      id = R.id.linear14;
      LinearLayout linear14 = ViewBindings.findChildViewById(rootView, id);
      if (linear14 == null) {
        break missingId;
      }

      id = R.id.linear15;
      LinearLayout linear15 = ViewBindings.findChildViewById(rootView, id);
      if (linear15 == null) {
        break missingId;
      }

      id = R.id.linear16;
      LinearLayout linear16 = ViewBindings.findChildViewById(rootView, id);
      if (linear16 == null) {
        break missingId;
      }

      id = R.id.linear17;
      LinearLayout linear17 = ViewBindings.findChildViewById(rootView, id);
      if (linear17 == null) {
        break missingId;
      }

      id = R.id.linear18;
      LinearLayout linear18 = ViewBindings.findChildViewById(rootView, id);
      if (linear18 == null) {
        break missingId;
      }

      id = R.id.linear19;
      LinearLayout linear19 = ViewBindings.findChildViewById(rootView, id);
      if (linear19 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear20;
      LinearLayout linear20 = ViewBindings.findChildViewById(rootView, id);
      if (linear20 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = ViewBindings.findChildViewById(rootView, id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.linear8;
      FrameLayout linear8 = ViewBindings.findChildViewById(rootView, id);
      if (linear8 == null) {
        break missingId;
      }

      id = R.id.linear9;
      LinearLayout linear9 = ViewBindings.findChildViewById(rootView, id);
      if (linear9 == null) {
        break missingId;
      }

      id = R.id.linearloadhires;
      LinearLayout linearloadhires = ViewBindings.findChildViewById(rootView, id);
      if (linearloadhires == null) {
        break missingId;
      }

      id = R.id.linearpfpprevbg;
      LinearLayout linearpfpprevbg = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linearpfppreview;
      LinearLayout linearpfppreview = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linearpreviewcard;
      LinearLayout linearpreviewcard = ViewBindings.findChildViewById(rootView, id);
      if (linearpreviewcard == null) {
        break missingId;
      }

      id = R.id.pfpClipper;
      LinearLayout pfpClipper = ViewBindings.findChildViewById(rootView, id);

      id = R.id.previewStatusBar;
      LinearLayout previewStatusBar = ViewBindings.findChildViewById(rootView, id);
      if (previewStatusBar == null) {
        break missingId;
      }

      id = R.id.progressBar6;
      ProgressBar progressBar6 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar6 == null) {
        break missingId;
      }

      id = R.id.progress_bar_loading;
      ProgressBar progressBarLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressBarLoading == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textViewCrop;
      TextView textViewCrop = ViewBindings.findChildViewById(rootView, id);
      if (textViewCrop == null) {
        break missingId;
      }

      id = R.id.textViewLoading;
      TextView textViewLoading = ViewBindings.findChildViewById(rootView, id);
      if (textViewLoading == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.textview4;
      TextView textview4 = ViewBindings.findChildViewById(rootView, id);
      if (textview4 == null) {
        break missingId;
      }

      id = R.id.time2;
      TextView time2 = ViewBindings.findChildViewById(rootView, id);
      if (time2 == null) {
        break missingId;
      }

      return new WalldownloadBinding((LinearLayout) rootView, Game, ImageView4, ImageView5,
          ImageView6, LinearLayout1, LinearLayout4, LinearLayout5, Massage, More, Phone, SearchBg,
          Translator, button1, button2, button3, button4, color1, color2, color3, color4, color5,
          color6, colorpreviews, colorpreviewsloading, imageViewPfp, imageview1, imageview3,
          linear1, linear10, linear11, linear14, linear15, linear16, linear17, linear18, linear19,
          linear2, linear20, linear4, linear5, linear7, linear8, linear9, linearloadhires,
          linearpfpprevbg, linearpfppreview, linearpreviewcard, pfpClipper, previewStatusBar,
          progressBar6, progressBarLoading, textView14, textView18, textView2, textView20,
          textView3, textView5, textViewCrop, textViewLoading, textview1, textview2, textview3,
          textview4, time2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
