// Generated by view binder compiler. Do not edit!
package com.ios7.wallify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.canhub.cropper.CropImageView;
import com.ios7.wallify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCropWallpaperBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView AMPM;

  @NonNull
  public final ImageView Game;

  @NonNull
  public final ImageView ImageView4;

  @NonNull
  public final ImageView ImageView5;

  @NonNull
  public final ImageView ImageView6;

  @NonNull
  public final LinearLayout LinearLayout1;

  @NonNull
  public final LinearLayout LinearLayout15;

  @NonNull
  public final LinearLayout LinearLayout2;

  @NonNull
  public final LinearLayout LinearLayout3;

  @NonNull
  public final LinearLayout LinearLayout4;

  @NonNull
  public final LinearLayout LinearLayout5;

  @NonNull
  public final ImageView Massage;

  @NonNull
  public final ImageView More;

  @NonNull
  public final ImageView Phone;

  @NonNull
  public final LinearLayout SearchBg;

  @NonNull
  public final TextView Tarik;

  @NonNull
  public final ImageView Translator;

  @NonNull
  public final LinearLayout bottomBar;

  @NonNull
  public final LinearLayout confirmScreen;

  @NonNull
  public final LinearLayout content;

  @NonNull
  public final CropImageView cropImageView;

  @NonNull
  public final ImageView cropPreview;

  @NonNull
  public final LinearLayout cropScreen;

  @NonNull
  public final TextView goBackButton;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final FrameLayout linear10;

  @NonNull
  public final LinearLayout linear11;

  @NonNull
  public final LinearLayout linear14;

  @NonNull
  public final LinearLayout linear15;

  @NonNull
  public final LinearLayout linear16;

  @NonNull
  public final LinearLayout linear17;

  @NonNull
  public final LinearLayout linear18;

  @NonNull
  public final LinearLayout linear19;

  @NonNull
  public final LinearLayout linear20;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final FrameLayout linear8;

  @NonNull
  public final LinearLayout linear9;

  @NonNull
  public final LinearLayout linearpreviewcard;

  @NonNull
  public final LinearLayout mainEditingPage;

  @NonNull
  public final TextView nextButton;

  @NonNull
  public final TextView setWallpaperButton;

  @NonNull
  public final TextView textViewTopbar;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView textview4;

  @NonNull
  public final TextView time2;

  @NonNull
  public final LinearLayout topBar;

  private ActivityCropWallpaperBinding(@NonNull LinearLayout rootView, @NonNull TextView AMPM,
      @NonNull ImageView Game, @NonNull ImageView ImageView4, @NonNull ImageView ImageView5,
      @NonNull ImageView ImageView6, @NonNull LinearLayout LinearLayout1,
      @NonNull LinearLayout LinearLayout15, @NonNull LinearLayout LinearLayout2,
      @NonNull LinearLayout LinearLayout3, @NonNull LinearLayout LinearLayout4,
      @NonNull LinearLayout LinearLayout5, @NonNull ImageView Massage, @NonNull ImageView More,
      @NonNull ImageView Phone, @NonNull LinearLayout SearchBg, @NonNull TextView Tarik,
      @NonNull ImageView Translator, @NonNull LinearLayout bottomBar,
      @NonNull LinearLayout confirmScreen, @NonNull LinearLayout content,
      @NonNull CropImageView cropImageView, @NonNull ImageView cropPreview,
      @NonNull LinearLayout cropScreen, @NonNull TextView goBackButton,
      @NonNull ImageView imageview1, @NonNull ImageView imageview3, @NonNull FrameLayout linear10,
      @NonNull LinearLayout linear11, @NonNull LinearLayout linear14,
      @NonNull LinearLayout linear15, @NonNull LinearLayout linear16,
      @NonNull LinearLayout linear17, @NonNull LinearLayout linear18,
      @NonNull LinearLayout linear19, @NonNull LinearLayout linear20, @NonNull LinearLayout linear7,
      @NonNull FrameLayout linear8, @NonNull LinearLayout linear9,
      @NonNull LinearLayout linearpreviewcard, @NonNull LinearLayout mainEditingPage,
      @NonNull TextView nextButton, @NonNull TextView setWallpaperButton,
      @NonNull TextView textViewTopbar, @NonNull TextView textview2, @NonNull TextView textview3,
      @NonNull TextView textview4, @NonNull TextView time2, @NonNull LinearLayout topBar) {
    this.rootView = rootView;
    this.AMPM = AMPM;
    this.Game = Game;
    this.ImageView4 = ImageView4;
    this.ImageView5 = ImageView5;
    this.ImageView6 = ImageView6;
    this.LinearLayout1 = LinearLayout1;
    this.LinearLayout15 = LinearLayout15;
    this.LinearLayout2 = LinearLayout2;
    this.LinearLayout3 = LinearLayout3;
    this.LinearLayout4 = LinearLayout4;
    this.LinearLayout5 = LinearLayout5;
    this.Massage = Massage;
    this.More = More;
    this.Phone = Phone;
    this.SearchBg = SearchBg;
    this.Tarik = Tarik;
    this.Translator = Translator;
    this.bottomBar = bottomBar;
    this.confirmScreen = confirmScreen;
    this.content = content;
    this.cropImageView = cropImageView;
    this.cropPreview = cropPreview;
    this.cropScreen = cropScreen;
    this.goBackButton = goBackButton;
    this.imageview1 = imageview1;
    this.imageview3 = imageview3;
    this.linear10 = linear10;
    this.linear11 = linear11;
    this.linear14 = linear14;
    this.linear15 = linear15;
    this.linear16 = linear16;
    this.linear17 = linear17;
    this.linear18 = linear18;
    this.linear19 = linear19;
    this.linear20 = linear20;
    this.linear7 = linear7;
    this.linear8 = linear8;
    this.linear9 = linear9;
    this.linearpreviewcard = linearpreviewcard;
    this.mainEditingPage = mainEditingPage;
    this.nextButton = nextButton;
    this.setWallpaperButton = setWallpaperButton;
    this.textViewTopbar = textViewTopbar;
    this.textview2 = textview2;
    this.textview3 = textview3;
    this.textview4 = textview4;
    this.time2 = time2;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCropWallpaperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCropWallpaperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_crop_wallpaper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCropWallpaperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AM_PM;
      TextView AMPM = ViewBindings.findChildViewById(rootView, id);
      if (AMPM == null) {
        break missingId;
      }

      id = R.id.Game;
      ImageView Game = ViewBindings.findChildViewById(rootView, id);
      if (Game == null) {
        break missingId;
      }

      id = R.id.ImageView4;
      ImageView ImageView4 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView4 == null) {
        break missingId;
      }

      id = R.id.ImageView5;
      ImageView ImageView5 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView5 == null) {
        break missingId;
      }

      id = R.id.ImageView6;
      ImageView ImageView6 = ViewBindings.findChildViewById(rootView, id);
      if (ImageView6 == null) {
        break missingId;
      }

      id = R.id.LinearLayout1;
      LinearLayout LinearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout1 == null) {
        break missingId;
      }

      id = R.id.LinearLayout15;
      LinearLayout LinearLayout15 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout15 == null) {
        break missingId;
      }

      id = R.id.LinearLayout2;
      LinearLayout LinearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout2 == null) {
        break missingId;
      }

      id = R.id.LinearLayout3;
      LinearLayout LinearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout3 == null) {
        break missingId;
      }

      id = R.id.LinearLayout4;
      LinearLayout LinearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout4 == null) {
        break missingId;
      }

      id = R.id.LinearLayout5;
      LinearLayout LinearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout5 == null) {
        break missingId;
      }

      id = R.id.Massage;
      ImageView Massage = ViewBindings.findChildViewById(rootView, id);
      if (Massage == null) {
        break missingId;
      }

      id = R.id.More;
      ImageView More = ViewBindings.findChildViewById(rootView, id);
      if (More == null) {
        break missingId;
      }

      id = R.id.Phone;
      ImageView Phone = ViewBindings.findChildViewById(rootView, id);
      if (Phone == null) {
        break missingId;
      }

      id = R.id.Search_bg;
      LinearLayout SearchBg = ViewBindings.findChildViewById(rootView, id);
      if (SearchBg == null) {
        break missingId;
      }

      id = R.id.Tarik;
      TextView Tarik = ViewBindings.findChildViewById(rootView, id);
      if (Tarik == null) {
        break missingId;
      }

      id = R.id.Translator;
      ImageView Translator = ViewBindings.findChildViewById(rootView, id);
      if (Translator == null) {
        break missingId;
      }

      id = R.id.bottomBar;
      LinearLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.confirmScreen;
      LinearLayout confirmScreen = ViewBindings.findChildViewById(rootView, id);
      if (confirmScreen == null) {
        break missingId;
      }

      id = R.id.content;
      LinearLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.cropImageView;
      CropImageView cropImageView = ViewBindings.findChildViewById(rootView, id);
      if (cropImageView == null) {
        break missingId;
      }

      id = R.id.cropPreview;
      ImageView cropPreview = ViewBindings.findChildViewById(rootView, id);
      if (cropPreview == null) {
        break missingId;
      }

      id = R.id.cropScreen;
      LinearLayout cropScreen = ViewBindings.findChildViewById(rootView, id);
      if (cropScreen == null) {
        break missingId;
      }

      id = R.id.goBackButton;
      TextView goBackButton = ViewBindings.findChildViewById(rootView, id);
      if (goBackButton == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = ViewBindings.findChildViewById(rootView, id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.linear10;
      FrameLayout linear10 = ViewBindings.findChildViewById(rootView, id);
      if (linear10 == null) {
        break missingId;
      }

      id = R.id.linear11;
      LinearLayout linear11 = ViewBindings.findChildViewById(rootView, id);
      if (linear11 == null) {
        break missingId;
      }

      id = R.id.linear14;
      LinearLayout linear14 = ViewBindings.findChildViewById(rootView, id);
      if (linear14 == null) {
        break missingId;
      }

      id = R.id.linear15;
      LinearLayout linear15 = ViewBindings.findChildViewById(rootView, id);
      if (linear15 == null) {
        break missingId;
      }

      id = R.id.linear16;
      LinearLayout linear16 = ViewBindings.findChildViewById(rootView, id);
      if (linear16 == null) {
        break missingId;
      }

      id = R.id.linear17;
      LinearLayout linear17 = ViewBindings.findChildViewById(rootView, id);
      if (linear17 == null) {
        break missingId;
      }

      id = R.id.linear18;
      LinearLayout linear18 = ViewBindings.findChildViewById(rootView, id);
      if (linear18 == null) {
        break missingId;
      }

      id = R.id.linear19;
      LinearLayout linear19 = ViewBindings.findChildViewById(rootView, id);
      if (linear19 == null) {
        break missingId;
      }

      id = R.id.linear20;
      LinearLayout linear20 = ViewBindings.findChildViewById(rootView, id);
      if (linear20 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = ViewBindings.findChildViewById(rootView, id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.linear8;
      FrameLayout linear8 = ViewBindings.findChildViewById(rootView, id);
      if (linear8 == null) {
        break missingId;
      }

      id = R.id.linear9;
      LinearLayout linear9 = ViewBindings.findChildViewById(rootView, id);
      if (linear9 == null) {
        break missingId;
      }

      id = R.id.linearpreviewcard;
      LinearLayout linearpreviewcard = ViewBindings.findChildViewById(rootView, id);
      if (linearpreviewcard == null) {
        break missingId;
      }

      id = R.id.mainEditingPage;
      LinearLayout mainEditingPage = ViewBindings.findChildViewById(rootView, id);
      if (mainEditingPage == null) {
        break missingId;
      }

      id = R.id.nextButton;
      TextView nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.setWallpaperButton;
      TextView setWallpaperButton = ViewBindings.findChildViewById(rootView, id);
      if (setWallpaperButton == null) {
        break missingId;
      }

      id = R.id.textViewTopbar;
      TextView textViewTopbar = ViewBindings.findChildViewById(rootView, id);
      if (textViewTopbar == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.textview4;
      TextView textview4 = ViewBindings.findChildViewById(rootView, id);
      if (textview4 == null) {
        break missingId;
      }

      id = R.id.time2;
      TextView time2 = ViewBindings.findChildViewById(rootView, id);
      if (time2 == null) {
        break missingId;
      }

      id = R.id.topBar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityCropWallpaperBinding((LinearLayout) rootView, AMPM, Game, ImageView4,
          ImageView5, ImageView6, LinearLayout1, LinearLayout15, LinearLayout2, LinearLayout3,
          LinearLayout4, LinearLayout5, Massage, More, Phone, SearchBg, Tarik, Translator,
          bottomBar, confirmScreen, content, cropImageView, cropPreview, cropScreen, goBackButton,
          imageview1, imageview3, linear10, linear11, linear14, linear15, linear16, linear17,
          linear18, linear19, linear20, linear7, linear8, linear9, linearpreviewcard,
          mainEditingPage, nextButton, setWallpaperButton, textViewTopbar, textview2, textview3,
          textview4, time2, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
